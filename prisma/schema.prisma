generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model UserInfo {
  id                      Int             @id @default(autoincrement())
  account_number          Int?            @unique
  fullname                String
  father_name             String?
  username                String          @unique
  email                   String          @unique
  pNumber                 String?
  cnic_no                 String?
  user_img                Bytes?
  cnic_back_img           Bytes?
  cnic_front_img          Bytes?
  address                 String?

  family_member_name      String?
  family_relation         String?
  family_contact_number   String?
  family_description      String?
  refferal_name           String?
  refferal_account_number String?
  refferal_description    String?
  
  password                String          @db.VarChar(255)
  gender                  Gender          @default(male)
  date                    DateTime
  status                  Status          @default(pending)
  role                    Role            @default(customer)
  createdAt               DateTime        @default(now())
  updatedAt               DateTime        @updatedAt
  paymentRecords          PaymentRecord[] @relation("UserPayments")
  customerPayments        PaymentRecord[] @relation("CustomerPayments")
}

enum Gender {
  male
  female
}

enum Status {
  active
  inactive
  pending
}

enum Role {
  customer
  admin
  manager
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  payments    PaymentRecord[]
  PaymentItem PaymentItem[]
}

model PaymentRecord {
  id          Int            @id @default(autoincrement())
  user_id     Int
  customer_id Int
  amount      Float?
  paid_amount Float?
  description String?
  method      PaymentMethod?
  createdAt   DateTime
  updatedAt   DateTime       @updatedAt
  isDelete    Boolean?       @default(false)
  total       Float?
  less        Float?
  payment     Float?

  user       UserInfo      @relation(name: "UserPayments", fields: [user_id], references: [id], onDelete: NoAction)
  customer   UserInfo      @relation(name: "CustomerPayments", fields: [customer_id], references: [id], onDelete: NoAction)
  Product    Product?      @relation(fields: [product_id], references: [id], onDelete: SetNull)
  product_id Int?
  items      PaymentItem[] @relation("PaymentToItems") // One-to-Many relation
}

model PaymentItem {
  id         Int     @id @default(autoincrement())
  payment_id Int // PaymentRecord ka ID
  product_id Int? // Product ka ID
  name       String? // Product ka naam
  qty        Int? // Quantity
  price      Float? // Single product ki price
  amount     Float? // Total amount (price * qty)

  paymentRecord PaymentRecord @relation(name: "PaymentToItems", fields: [payment_id], references: [id], onDelete: Cascade)
  product       Product?      @relation(fields: [product_id], references: [id], onDelete: SetNull)
}

enum PaymentMethod {
  cash
  bank
}
